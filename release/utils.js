"use strict";var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard"),_interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:!0}),exports.mkdirSync=exports.mkdir=exports.exists=exports.logger=exports.getResourceAbsolutePath=exports.PKG_VERSION=exports.PKG_NAME=void 0;var _fs=_interopRequireDefault(require("fs")),_path=_interopRequireDefault(require("path")),_cat=require("@xrosy/cat"),packageInfo=_interopRequireWildcard(require("../package.json")),PKG_NAME=packageInfo.name;exports.PKG_NAME=PKG_NAME;var PKG_VERSION=packageInfo.version;exports.PKG_VERSION=PKG_VERSION;var getResourceAbsolutePath=function getResourceAbsolutePath(){return _path["default"].join(__dirname,"../resource")};exports.getResourceAbsolutePath=getResourceAbsolutePath;var logger=new _cat.Cat({error:"#redBright(:i-error)",warn:"#yellowBright(:i-warn)",success:"#greenBright(:i-success) %s",info:"#blueBright(:i-info)",log:":i-log",primary:"#greenBright(\u27A5 %s)",debug:"#cyanBright(:i-debug %s)"});/** 验证文件或者目录是否存在
 *
 * @param   {string}      strPath             - the absolute path for file or directory.
 * @return  {boolean}                         - the validate result.
 */exports.logger=logger;var exists=function exists(a){return _fs["default"].existsSync(a)};/** 创建文件夹 */exports.exists=exists;var mkdir=function mkdir(a,b){var c=b.force,d=b.recursive,e=exists(a);return new Promise(function(b){(!1===e||!0===(void 0!==c&&c))&&_fs["default"].mkdir(a,{recursive:!0===(!(void 0!==d)||d)},function(c){if(c)throw c;logger.success("[SUCCESS]",a),b(a)}),b()})};exports.mkdir=mkdir;var mkdirSync=function mkdirSync(a,b){var c=b.force,d=b.recursive;_fs["default"].mkdirSync(a,{force:void 0!==c&&c,recursive:!(void 0!==d)||d})};exports.mkdirSync=mkdirSync;